[General]
image-path=../../images
tkenv-plugin-path = ../../../inet/etc/plugins
output-scalar-file-append = false
debug-on-errors = false
tkenv-default-config = 
sim-time-limit=73800s
warmup-period=0s
repeat = 1
**.routingRecorder.enabled = false

############### Statistics ##################
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
seed-set = ${repetition}
**.vector-recording = true

################ Channel parameters #####################
**.channelControl.pMax = 10W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2100e+6Hz

################ PhyLayer parameters #####################
**.nic.phy.channelModel=xmldoc("config_channel.xml")
**.feedbackComputation = xmldoc("config_channel.xml")

################ Mobility parameters #####################
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

################# Deployer parameters #######################
# UEs attached to eNB
**.fbDelay = 1

############### AMC MODULE PARAMETERS ###############
**.rbAllocationType = "localized"
**.deployer.numRbDl = 50
**.deployer.numRbUl = 50
**.numBands = 50

###########################################################
################ Config "D2DMulticast-1to2" ###############
###########################################################
[Config D2DMulticast-1to2]
network=lte.simulations.networks.SingleCell_D2DMulticast

################ eNodeBs configuration ###############
*.eNodeB.mobility.initFromDisplayString = false
*.eNodeB.mobility.initialX = 300m
*.eNodeB.mobility.initialY = 300m

################ UEs configuration ###############
*.numUeCell = 0
*.numUeD2D = 3

*.ue*[*].macCellId = 1
*.ue*[*].masterId = 1
*.ue*[*].mobility.initFromDisplayString = false

## Transmitter and receiver Y alignment
*.ueD2D[*].mobility.initialY = 350m

## Transmitter (set bellow)
*.ueD2D[0].mobility.initialX = 290m
#
## Receivers (set bellow)
*.ueD2D[1].mobility.initialX = 310m
*.ueD2D[2].mobility.initialX = 330m

#### Traffic configuration ###
*.ueD2D[*].numUdpApps = 1
#
## One-to-Many traffic between UEs (ueD2D[0] --> ueD2DRx[1..2])
## Transmitter
*.ueD2D[0].udpApp[*].typename = "AlertSender"
*.ueD2D[0].udpApp[*].localPort = 3088+ancestorIndex(0) 
*.ueD2D[0].udpApp[*].startTime = uniform(0s,0.02s)
*.ueD2D[0].udpApp[*].destAddress = "224.0.0.10"			# IP address of the multicast group 
*.ueD2D[0].udpApp[*].destPort = 1000

## Receiver (they must belong to the above multicast group (see demo.xml)
*.ueD2D[1..2].udpApp[*].typename = "AlertReceiver"
*.ueD2D[1..2].udpApp[*].localPort = 1000

## Enable D2D for the eNodeB and the UEs involved in direct communications
*.eNodeB.d2dCapable = true
*.ueD2D[*].d2dCapable = true
**.amcMode = "D2D"

################ Select CQI for D2D transmissions ###############
## One-to-Many communications work with fixed CQI values only.
**.usePreconfiguredTxParams = true
**.d2dCqi = 7

############### Set power consumption ###############
*.ueD2D[*].energyConsumerType = "AlternatingEnergyConsumerSimuLTE"
*.ueD2D[0].energyConsumer.powerConsumption = 140mW			# Value to receive
*.ueD2D[0].energyConsumer.consumptionInterval = 2s
*.ueD2D[0].energyConsumer.sleepInterval = 5s
*.ueD2D[0].energyConsumer.transmittingPowerConsumption = 310mW	#Value to transmitt = 450mW- 140mW (to receive) = 310mW

*.ueD2D[1..2].energyConsumer.powerConsumption = 140mW			# Value to receive
*.ueD2D[1..2].energyConsumer.consumptionInterval = 1s
*.ueD2D[1..2].energyConsumer.sleepInterval = 10s
*.ueD2D[1..2].energyConsumer.transmittingPowerConsumption = 0mW

*.ueD2D[*].energyStorageType = "SimpleEnergyStorage"		
*.ueD2D[*].energyStorage.nominalCapacity = 10000J  # the maximum amount of energy stored
*.ueD2D[*].energyStorage.nodeStartCapacity = 8000J 
*.ueD2D[*].energyStorage.initialCapacity = uniform(0J, this.nodeStartCapacity) # the initially stored amount of energy. Default value is nominalCapacity 
*.ueD2D[*].energyStorage.printCapacityStep = (0.01 * this.nominalCapacity) 						# displays residual capacity changes in the log. Default is 0.01 * nominalCapacity.
*.ueD2D[0].energyStorage.nodeShutdownCapacity = 1500J			
*.ueD2D[1..2].energyStorage.nodeShutdownCapacity = 0J			
*.ueD2D[*].hasStatus = true										### Joelias


##########################################################   
############### Config "D2DMulticast-1toM" ###############
##########################################################
# In this configuration, a transmitting UE sends periodic alert messages to "numUEs" 
# users. UEs are randomly deployed within the cell served by the eNodeB 

[Config D2DMulticast-1toM]
network=lte.simulations.networks.SingleCell_D2DMulticast

### eNodeBs configuration ###
*.eNodeB.mobility.initFromDisplayString = false
*.eNodeB.mobility.initialX = 300m
*.eNodeB.mobility.initialY = 300m

### UEs configuration ###
*.numUeCell = 0
*.numUeD2D = ${numUEs=10}

*.ue*[*].macCellId = 1
*.ue*[*].masterId = 1
*.ue*[*].mobility.initFromDisplayString = false

*.ue*[*].mobility.initialX = uniform(200m,400m)
*.ue*[*].mobility.initialY = uniform(200m,400m)

### Traffic configuration ###
*.ueD2D[*].numUdpApps = 1

# One-to-Many traffic between UEs (ueD2D[0] --> ueD2DRx[1..2])
# Transmitter
*.ueD2D[0..3].udpApp[*].typename = "AlertSender"
*.ueD2D[0..3].udpApp[*].localPort = 3088+ancestorIndex(0) 
*.ueD2D[0..3].udpApp[*].startTime = uniform(0s,0.02s)
*.ueD2D[0..3].udpApp[*].destAddress = "224.0.0.10"          # IP address of the multicast group 
*.ueD2D[0..3].udpApp[*].destPort = 1000

# Receivers (they must belong to the above multicast group (see demo.xml)
*.ueD2D[4..9].udpApp[*].typename = "AlertReceiver"
*.ueD2D[4..9].udpApp[*].localPort = 1000

# Enable D2D for the eNodeB and the UEs involved in direct communications
*.eNodeB.d2dCapable = true
*.ueD2D[*].d2dCapable = true
**.amcMode = "D2D"

# --- Select CQI for D2D transmissions --- #
**.usePreconfiguredTxParams = true
**.d2dCqi = ${cqi=3,5,7,9,11,13,15}

### PhyLayer parameters ###
**.nic.phy.channelModel=xmldoc("config_channel_nofadshad.xml")
**.feedbackComputation = xmldoc("config_channel_nofadshad.xml")

output-scalar-file = ${resultdir}/${configname}/cqi=${cqi}-${repetition}.sca
output-vector-file = ${resultdir}/${configname}/cqi=${cqi}-${repetition}.vec

############### Set power consumption ###############
*.ueD2D[*].energyConsumerType = "AlternatingEnergyConsumerSimuLTE"
*.ueD2D[0..3].energyConsumer.powerConsumption = 110mW			# Value to receive
*.ueD2D[0..3].energyConsumer.consumptionInterval = 2s
*.ueD2D[0..3].energyConsumer.sleepInterval = 5s
*.ueD2D[0..3].energyConsumer.transmittingPowerConsumption = 310mW	#Value to transmitt = 450mW- 140mW (to receive) = 310mW

*.ueD2D[4..9].energyConsumer.powerConsumption = 140mW			# Value to receive
*.ueD2D[4..9].energyConsumer.consumptionInterval = 1s
*.ueD2D[4..9].energyConsumer.sleepInterval = 10s
*.ueD2D[4..9].energyConsumer.transmittingPowerConsumption = 0mW

*.ueD2D[*].energyStorageType = "SimpleEnergyStorage"		
*.ueD2D[*].energyStorage.nominalCapacity = 10000J  # the maximum amount of energy stored
*.ueD2D[*].energyStorage.nodeStartCapacity = 8000J 
#*.ueD2D[*].energyStorage.initialCapacity = uniform(0J, this.nodeStartCapacity) # the initially stored amount of energy. Default value is nominalCapacity 
*.ueD2D[*].energyStorage.printCapacityStep = (0.01 * this.nominalCapacity) 						# displays residual capacity changes in the log. Default is 0.01 * nominalCapacity.
*.ueD2D[0].energyStorage.nodeShutdownCapacity = 1500J		
*.ueD2D[1].energyStorage.nodeShutdownCapacity = 1500J		
*.ueD2D[2].energyStorage.nodeShutdownCapacity = 1500J			
*.ueD2D[3].energyStorage.nodeShutdownCapacity = 1500J	
#*.ueD2D[4].energyStorage.nodeShutdownCapacity = 1500J			
*.ueD2D[4..9].energyStorage.nodeShutdownCapacity = 0J			
*.ueD2D[*].hasStatus = true										### Joelias