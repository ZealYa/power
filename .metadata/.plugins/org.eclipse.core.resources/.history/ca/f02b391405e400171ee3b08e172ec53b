[General]
image-path=../../images
tkenv-plugin-path = ../../../inet/etc/plugins
output-scalar-file-append = false
debug-on-errors = false
tkenv-default-config = 
sim-time-limit=20s
warmup-period=0s
repeat = 1
**.routingRecorder.enabled = false

############### Statistics ##################
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
seed-set = ${repetition}
**.vector-recording = true

################ Channel parameters #####################
**.channelControl.pMax = 10W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2100e+6Hz

################ PhyLayer parameters #####################
**.nic.phy.channelModel=xmldoc("config_channel.xml")
**.feedbackComputation = xmldoc("config_channel.xml")

################ Mobility parameters #####################
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

################# Deployer parameters #######################
# UEs attached to eNB
**.fbDelay = 1

############### AMC MODULE PARAMETERS ###############
**.rbAllocationType = "localized"
**.deployer.numRbDl = 50
**.deployer.numRbUl = 50
**.numBands = 50


############### Config "D2DMulticast-1to2" ###############
# In this configuration, a transmitting UE sends periodic alert messages to two 
# users, located close to it.
#
[Config D2DMulticast-1to3]
network=lte.simulations.networks.SingleCell_D2DMulticast
#network=lte.simulations.networks.SingleCell_D2D

############### eNodeBs configuration ###############
*.eNodeB.mobility.initFromDisplayString = true
*.eNodeB.mobility.initialX = 300m
*.eNodeB.mobility.initialY = 300m

############### UEs configuration ###############
*.numUeCell = 0
*.numUeD2D = 4

*.ue*[*].macCellId = 1
*.ue*[*].masterId = 1
*.ue*[*].mobility.initFromDisplayString = false

# Place D2D endpoints far from the eNodeB (~50m) and close to each other (20m)
*.ueD2D[*].mobility.initialY = 350m  #original 350

# Transmitter (set bellow)
*.ueD2D[0].mobility.initialX = 50m  #original 290

# Receivers (set bellow)
*.ueD2D[1].mobility.initialX = 150m
*.ueD2D[2].mobility.initialX = 250m
*.ueD2D[3].mobility.initialX = 350m  
#*.ueD2D[4].mobility.initialX = 400m  #original 310
#*.ueD2D[5].mobility.initialX = 500m
#*.ueD2D[6].mobility.initialX = 600m
#*.ueD2D[7].mobility.initialX = 700m

### Traffic configuration ###
*.ueD2D[*].numUdpApps = 1

# One-to-Many traffic between UEs (ueD2D[0] --> ueD2DRx[1..2])
# Transmitter
*.ueD2D[0].udpApp[*].typename = "AlertSender"
*.ueD2D[0].udpApp[*].localPort = 3088+ancestorIndex(0) 
*.ueD2D[0].udpApp[*].startTime = uniform(0s,0.02s)
*.ueD2D[0].udpApp[*].destAddress = "224.0.0.10"			# IP address of the multicast group 
*.ueD2D[0].udpApp[*].destPort = 1000

# Receiver (they must belong to the above multicast group (see demo.xml)
*.ueD2D[1..3].udpApp[*].typename = "AlertReceiver"
*.ueD2D[1..3].udpApp[*].localPort = 1000

# Enable D2D for the eNodeB and the UEs involved in direct communications
*.eNodeB.d2dCapable = true
*.ueD2D*[*].d2dCapable = true
**.amcMode = "D2D"


############### Select CQI for D2D transmissions ###############
# One-to-Many communications work with fixed CQI values only. Set the parameter **.usePreconfiguredTxParams and 
# select the desired CQI using the parameter **.d2dCqi
**.usePreconfiguredTxParams = true
**.d2dCqi = 7


############### Set power consumption ###############
*.ueD2D[*].energyConsumerType = "AlternatingEnergyConsumerSimuLTE"
*.ueD2D[*].energyConsumer.powerConsumption = 100mW
*.ueD2D[*].energyConsumer.consumptionInterval = 5s
*.ueD2D[*].energyConsumer.sleepInterval = 2s
*.ueD2D[0].energyConsumer.transmittingPowerConsumption = 100mW
*.ueD2D[1..3].energyConsumer.transmittingPowerConsumption = 0mW

*.ueD2D[*].energyStorageType = "SimpleEnergyStorage"		### Joelias // De IdealEnergyStorage para SimpleEnergyStorage
*.ueD2D[*].energyStorage.nominalCapacity = 0.80J  #1.0		### Joelias
*.ueD2D[*].energyStorage.nodeShutdownCapacity = 0J			### Joelias
*.ueD2D[*].energyStorage.nodeStartCapacity = 0.6J  # 0.5 * this.nominalCapacity		  #0.5		### Joelias
*.ueD2D[*].energyStorage.initialCapacity = 0.7J #uniform(0J, this.nominalCapacity)  #0.9		### Joelias
*.ueD2D[*].hasStatus = true										### Joelias

############### Config "D2DMulticast-1toM" ###############
# In this configuration, a transmitting UE sends periodic alert messages to "numUEs" 
# users. UEs are randomly deployed within the cell served by the eNodeB 
#
[Config D2DMulticast-1toM]
network=lte.simulations.networks.SingleCell_D2DMulticast

### eNodeBs configuration ###
*.eNodeB.mobility.initFromDisplayString = false
*.eNodeB.mobility.initialX = 300m
*.eNodeB.mobility.initialY = 300m

### UEs configuration ###
*.numUeCell = 0
*.numUeD2D = ${numUEs=50}

*.ue*[*].macCellId = 1
*.ue*[*].masterId = 1
*.ue*[*].mobility.initFromDisplayString = false

*.ue*[*].mobility.initialX = uniform(200m,400m)
*.ue*[*].mobility.initialY = uniform(200m,400m)

### Traffic configuration ###
*.ueD2D[*].numUdpApps = 1

# One-to-Many traffic between UEs (ueD2D[0] --> ueD2DRx[1..2])
# Transmitter
*.ueD2D[0].udpApp[*].typename = "AlertSender"
*.ueD2D[0].udpApp[*].localPort = 3088+ancestorIndex(0) 
*.ueD2D[0].udpApp[*].startTime = uniform(0s,0.02s)
*.ueD2D[0].udpApp[*].destAddress = "224.0.0.10"          # IP address of the multicast group 
*.ueD2D[0].udpApp[*].destPort = 1000

*.ueD2D[1].udpApp[*].typename = "AlertSender"
*.ueD2D[1].udpApp[*].localPort = 3088+ancestorIndex(0) 
*.ueD2D[1].udpApp[*].startTime = uniform(0s,0.02s)
*.ueD2D[1].udpApp[*].destAddress = "224.0.0.10"          # IP address of the multicast group 
*.ueD2D[1].udpApp[*].destPort = 1000

# Receivers (they must belong to the above multicast group (see demo.xml)
*.ueD2D[2..49].udpApp[*].typename = "AlertReceiver"
*.ueD2D[2..49].udpApp[*].localPort = 1000

# Enable D2D for the eNodeB and the UEs involved in direct communications
*.eNodeB.d2dCapable = true
*.ueD2D[*].d2dCapable = true
**.amcMode = "D2D"

# --- Select CQI for D2D transmissions --- #
#
# One-to-Many communications work with fixed CQI values only.Set the parameter **.usePreconfiguredTxParams and 
# select the desired CQI using the parameter **.d2dCqi
**.usePreconfiguredTxParams = true
**.d2dCqi = ${cqi=3,5,7,9,11,13,15}

############### Set power consumption ###############
*.ueD2D[*].energyConsumerType = "AlternatingEnergyConsumerSimuLTE"
*.ueD2D[*].energyConsumer.powerConsumption = 100mW
*.ueD2D[*].energyConsumer.consumptionInterval = 5s
*.ueD2D[*].energyConsumer.sleepInterval = 2s
*.ueD2D[0].energyConsumer.transmittingPowerConsumption = 100mW
*.ueD2D[1].energyConsumer.transmittingPowerConsumption = 100mW
*.ueD2D[2..49].energyConsumer.transmittingPowerConsumption = 0mW

*.ueD2D[*].energyStorageType = "SimpleEnergyStorage"		### Joelias // De IdealEnergyStorage para SimpleEnergyStorage
*.ueD2D[*].energyStorage.nominalCapacity = 0.80J  #1.0		### Joelias
*.ueD2D[*].energyStorage.nodeShutdownCapacity = 0J			### Joelias
*.ueD2D[*].energyStorage.nodeStartCapacity = 0.6J  # 0.5 * this.nominalCapacity		  #0.5		### Joelias
*.ueD2D[*].energyStorage.initialCapacity = 0.7J #uniform(0J, this.nominalCapacity)  #0.9		### Joelias
*.ueD2D[*].hasStatus = true										### Joelias


### PhyLayer parameters ###
**.nic.phy.channelModel=xmldoc("config_channel_nofadshad.xml")
**.feedbackComputation = xmldoc("config_channel_nofadshad.xml")

output-scalar-file = ${resultdir}/${configname}/cqi=${cqi}-${repetition}.sca
output-vector-file = ${resultdir}/${configname}/cqi=${cqi}-${repetition}.vec