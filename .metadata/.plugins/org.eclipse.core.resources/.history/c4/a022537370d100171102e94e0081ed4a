#include "AlternatingEnergyConsumerSimuLTE.h"

namespace inet {

namespace power {

Define_Module(AlternatingEnergyConsumerSimuLTE);

void AlternatingEnergyConsumerSimuLTE::updatePowerConsumption(){
    //if(state.get() == HostState::ACTIVE){
    if(isTransmitting==true){
        tmp1 = W(powerConsumption)+W(transmittingPowerConsumption);
        //powerConsumption = isSleeping ? (W(0)+W(transmittingPowerConsumption)) : (W(powerConsumption)+W(transmittingPowerConsumption));
        powerConsumption = isSleeping ? W(transmittingPowerConsumption) : (W(tmp1));
    }else{
        powerConsumption = isSleeping ? W(0) : W(par("powerConsumption"));
    }

    energySource->setPowerConsumption(energyConsumerId, powerConsumption);
    emit(IEnergySource::powerConsumptionChangedSignal, powerConsumption.get());
}

} // namespace power

} // namespace inet
